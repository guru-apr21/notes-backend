{"version":3,"sources":["components/Note.js","services/note.js","components/Notification.jsx","components/Footer.jsx","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","id","a","async","axios","get","data","nonExisting","date","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","then","initialNotes","notesToShow","filter","find","n","changedNote","returnedNote","map","catch","error","setTimeout","length","i","key","onSubmit","e","preventDefault","noteObject","Date","toISOString","Math","random","onChange","target","value","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.735d0c39.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content + \" \"}\n      <button onClick={() => toggleImportance(note.id)}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = async () => {\n  const { data } = await axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return [...data, nonExisting];\n};\n\nconst create = async (newObject) => {\n  const { data } = await axios.post(baseUrl, newObject);\n  return data;\n};\n\nconst update = async (id, newObject) => {\n  const { data } = await axios.put(`${baseUrl}/${id}`, newObject);\n  return data;\n};\n\nexport default { getAll, create, update };\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) return null;\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes([...notes, returnedNote]);\n      setNewNote(\"\");\n    });\n  };\n\n  const handleChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const toggleImportance = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `the note '${note.content}' was already deleted from the server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}></Notification>\n      <div>\n        {notes.length > 0 && (\n          <button onClick={() => setShowAll(!showAll)}>\n            Show {showAll ? \"important\" : \"all\"}\n          </button>\n        )}\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note key={i} note={note} toggleImportance={toggleImportance} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          onChange={handleChange}\n          value={newNote}\n          placeholder=\"Enter a new note...\"\n        ></input>\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}